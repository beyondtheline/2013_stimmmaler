#!/bin/bash -x -e
#
# Script to build a .deb snapshot of PS Move API
# Thomas Perl <m@thp.io>; 2012-09-27
#

export PSMOVEAPI_CHECKOUT=$(pwd)

if [ ! -f $PSMOVEAPI_CHECKOUT/CMakeLists.txt ]; then
    echo "ERROR: You have to run this script in the PS Move API source root."
    exit 1
fi

# Git revision identifier
PSMOVEAPI_REVISION=$(git show-ref --hash=8 HEAD)

DEB_NAME=$(dpkg-parsechangelog | grep ^Source: | cut -d' ' -f2-)
DEB_VERSION=$(dpkg-parsechangelog | grep ^Version: | cut -d' ' -f2-)
DEB_PACKAGE=${DEB_NAME}_${DEB_VERSION}

# By default, we build a snapshot. If "release" is the first argument, we
# build a release (do not add date and Git revision information to version)
if [ "$1" != "release" ]; then
    TARGET_VERSION=${DEB_VERSION}~$(date +%F)+${PSMOVEAPI_REVISION}
else
    TARGET_VERSION=${DEB_VERSION}
fi

IGNORE_DIRECTORIES="-Ibuild -Iupload -Iopencv -I.git"

cd $PSMOVEAPI_CHECKOUT
rm -rf deb_tmp
dpkg-source ${IGNORE_DIRECTORIES} -b .
mkdir -p deb_tmp
mv ../${DEB_PACKAGE}.{dsc,tar.gz} deb_tmp/
cd deb_tmp
dpkg-source -x ${DEB_PACKAGE}.dsc
cd ${DEB_NAME}-${DEB_VERSION}
dch --force-bad-version --preserve --newversion=${TARGET_VERSION} "Automatic build"
dpkg-buildpackage -rfakeroot ${IGNORE_DIRECTORIES} -sa

cd $PSMOVEAPI_CHECKOUT
cd deb_tmp
rm -rf ${DEB_PACKAGE}.{dsc,tar.gz} ${DEB_NAME}-${DEB_VERSION}

cd $PSMOVEAPI_CHECKOUT
mkdir -p upload
mv deb_tmp/* upload/
rm -rf deb_tmp

